{"version":3,"sources":["components/Error.js","components/Pregunta.js","components/Formulario.js","components/Gasto.js","components/Listado.js","helpers.js","components/ControlPresupuesto.js","App.js","reportWebVitals.js","index.js"],"names":["Error","mensaje","className","Pregunta","guardarPresupuesto","guardarRestante","actualizarPregunta","useState","cantidad","guardarCantidad","error","guardarError","onSubmit","e","preventDefault","isNaN","type","placeholder","onChange","parseInt","target","value","console","log","Formulario","guardarGasto","guardarCrearGasto","nombre","guardarNombre","trim","gasto","id","shortid","generate","Gasto","Listado","gastos","map","revisarPresupuesto","presupuesto","restante","ControlPresupuesto","App","mostrarPregunta","guardarGastos","crearGasto","useEffect","presupuestoRestante","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d4f67e89.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nconst Error = ({mensaje}) => {\n    return ( \n        <p className=\"alert alert-danger error\">\n            {mensaje}\n        </p>\n     );\n}\nError.propTypes = {\n    mensaje: PropTypes.string.isRequired\n};\nexport default Error;","import React, {Fragment, useState} from 'react';\nimport Error from './Error';\nimport PropTypes from 'prop-types';\n\nconst Pregunta = ({guardarPresupuesto, guardarRestante, actualizarPregunta}) => {\n\n    const [cantidad, guardarCantidad] = useState(0);\n    const [error, guardarError] = useState(false);\n\n\n    //Funcion que lee el presupuesto\n    const definirPresupuesto = e => {\n        guardarCantidad(parseInt(e.target.value))\n        console.log(e.target.value);\n    };\n\n    //Submit para definir el presupuesto\n    const agregarPresupuesto = (e) => {\n        \n        e.preventDefault();\n        \n        //Validar\n        if(cantidad < 1 || isNaN(cantidad)){\n            guardarError(true);\n            return;\n        }\n        //Si se pasa la validacion\n        guardarError(false);\n        guardarPresupuesto(cantidad);\n        guardarRestante(cantidad);\n        actualizarPregunta(false);\n    }\n    return ( \n        <Fragment>\n            <h2>Coloca tu presupuesto</h2>\n            {error ? <Error mensaje=\"El presupuesto es incorrecto\"/> : null}\n            <form onSubmit={agregarPresupuesto}>\n                <input\n                    type=\"number\"\n                    className=\"u-full-width\"\n                    placeholder=\"Coloca tu presupuesto\"\n                    onChange={definirPresupuesto}/>\n                <input\n                    type=\"submit\"\n                    className=\"button-primary u-full-width\"\n                    value=\"Definir respuesta\"/>\n\n            </form>\n        </Fragment>\n     );\n}\nPregunta.propTypes = {\n    guardarPresupuesto: PropTypes.func.isRequired,\n    guardarRestante: PropTypes.func.isRequired,\n    actualizarPregunta: PropTypes.func.isRequired,\n}\nexport default Pregunta;","import React, {useState} from 'react';\nimport Error from './Error';\nimport shortid from 'shortid';\nimport PropTypes from 'prop-types';\n\nconst Formulario = ({guardarGasto, guardarCrearGasto}) => {\n    const [nombre, guardarNombre] = useState('');\n    const [cantidad, guardarCantidad] = useState(0);\n    const [error, guardarError] = useState(false);\n\n    const agregarGasto = (e) => {\n        e.preventDefault();\n        \n        // validar\n        if(cantidad < 1 || isNaN(cantidad) || nombre.trim() === \"\")\n        {\n            return;\n        }\n        guardarError(false);\n        //construir el gaso\n         \n        const gasto = {\n            nombre, cantidad, id:  shortid.generate()\n        };\n        console.log(gasto)\n        //pasar el gasto al componente principal\n        guardarGasto(gasto);\n        guardarCrearGasto(true);\n        //refrescar el form\n        guardarNombre(\"\");\n        guardarCantidad(0);\n\n    }\n    return ( \n        <form onSubmit={agregarGasto}>\n            <h2>Agrega tus gastos aqu√≠</h2>\n            {error ? <Error mensaje=\"Ambos campos son obligatorios o Presupuesto Incorrecto\"/>: null}\n            <div className=\"campo\">\n                <label>Nombre Gasto</label>\n                <input\n                    type=\"text\"\n                    className=\"u-full-width\"\n                    placeholder=\"Ej. Transporte\"\n                    value={nombre}\n                    onChange={e => guardarNombre(e.target.value)}\n                    />\n            </div>\n            <div className=\"campo\">\n                <label>Cantidad Gasto</label>\n                <input\n                    type=\"number\"\n                    className=\"u-full-width\"\n                    placeholder=\"Ej. 300\"\n                    value={cantidad}\n                    onChange={e => guardarCantidad(parseInt(e.target.value, 10))}\n                    />\n            </div>\n            <input type=\"submit\"\n                className=\"button-primary u-full-width\"\n                value=\"Agregar Gasto\"\n                />\n        </form>\n     );\n}\nFormulario.propTypes = {\n    guardarGasto: PropTypes.func.isRequired,\n    guardarCrearGasto: PropTypes.func.isRequired,\n}\nexport default Formulario;","import React from 'react'\nimport PropTypes from 'prop-types';\n\nfunction Gasto({gasto}) {\n    return (\n        <li className=\"gastos\">\n            <p>\n                {gasto.nombre}\n                <span className=\"gasto\">$ {gasto.cantidad}</span>\n            </p>\n        </li>\n    )\n}\n\nGasto.propTypes = {\n    gasto: PropTypes.object.isRequired\n}\n\n\nexport default Gasto\n\n","import React from 'react'\nimport Gasto from './Gasto';\nimport PropTypes from 'prop-types';\nconst Listado = ({gastos}) => {\n    return (\n        <div className=\"gastos-realizados\">\n             <h2>Listado</h2>\n             {gastos.map((gasto) => {\n                 return <Gasto gasto={gasto} key={gasto.id}/>\n             })}\n        </div>\n    )\n}\nListado.propTypes = {\n    gastos: PropTypes.array.isRequired\n}\n\nexport default Listado\n\n ","export const revisarPresupuesto = (presupuesto, restante ) => {\n    let clase;\n    if((presupuesto / 4) > restante){\n        clase = \"alert alert-danger\";\n    }else if((presupuesto / 2) > restante){\n        clase = \"alert alert-warning\";\n        \n    }else{\n        clase = \"alert alert-success\";\n    }\n    return clase;\n}","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {revisarPresupuesto} from '../helpers'\nfunction ControlPresupuesto({presupuesto, restante}) {\n    return (\n        <Fragment>\n            <div className=\"alert alert-primary\">\n                Presupuesto: $ {presupuesto}\n            </div>\n            <div className={revisarPresupuesto(presupuesto,restante)}>\n                Restante: $ {restante}\n            </div>\n        </Fragment>\n    )\n}\nControlPresupuesto.propTypes = {\n    presupuesto: PropTypes.number.isRequired,\n    restante: PropTypes.number.isRequired,\n}\n\nexport default ControlPresupuesto\n","import React, {useState, useEffect} from 'react';\nimport Pregunta from \"./components/Pregunta\";\nimport Formulario from \"./components/Formulario\";\nimport Listado from \"./components/Listado\";\nimport ControlPresupuesto from \"./components/ControlPresupuesto\";\n\nfunction App() {\n  const [presupuesto, guardarPresupuesto] = useState(0)\n  const [restante, guardarRestante] = useState(0)\n  const [mostrarPregunta, actualizarPregunta] = useState(true)\n  const [gastos, guardarGastos] = useState([]);\n  const [gasto, guardarGasto] = useState({});\n  const [crearGasto, guardarCrearGasto] = useState(false);\n\n  // UseEffect que actualiza el restante\n  useEffect(() => {\n    if(crearGasto){\n      //Agrega nuevo presupuesto\n      guardarGastos([...gastos, gasto]);\n      \n      //Resta del presupuesto actual\n      const presupuestoRestante = restante - gasto.cantidad;\n      guardarRestante(presupuestoRestante);\n      guardarCrearGasto(false);\n    }\n    \n  }, [gasto, crearGasto, gastos, restante])\n  //Cuando agregamos un nuevo gasto\n\n\n  return (\n    <div className=\"container\">\n      <header>\n        <h1>Gasto Semanal</h1>\n        <div className=\"contenido-principal contenido\">\n          {mostrarPregunta ? (\n            <Pregunta \n            guardarPresupuesto={guardarPresupuesto}\n            guardarRestante={guardarRestante}\n            actualizarPregunta={actualizarPregunta}\n            ></Pregunta>\n          ): (\n          <div className=\"row\">\n            <div className=\"one-half column\">\n              <Formulario \n                guardarGasto={guardarGasto}\n                guardarCrearGasto={guardarCrearGasto}/>\n            </div>\n            <div className=\"one-half column\">\n              <Listado gastos={gastos}/>\n              <ControlPresupuesto presupuesto={presupuesto} restante={restante}/>\n            </div>\n          </div>\n\n          )}\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}